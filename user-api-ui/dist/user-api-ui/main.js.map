{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/user-delete/user-delete.component.css","webpack:///./src/app/user-delete/user-delete.component.html","webpack:///./src/app/user-delete/user-delete.component.ts","webpack:///./src/app/user-form/user-form.component.css","webpack:///./src/app/user-form/user-form.component.html","webpack:///./src/app/user-form/user-form.component.ts","webpack:///./src/app/user-list/user-list.component.css","webpack:///./src/app/user-list/user-list.component.html","webpack:///./src/app/user-list/user-list.component.ts","webpack:///./src/app/user-service.service.ts","webpack:///./src/app/user.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserListComponent } from './user-list/user-list.component';\nimport { UserFormComponent } from './user-form/user-form.component';\n \nconst routes: Routes = [\n  { path: 'allusers', component: UserListComponent },\n  { path: 'user', component: UserFormComponent }\n];\n \n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"card bg-dark my-5\\\">\\n        <div class=\\\"card-body\\\">\\n          <h2 class=\\\"card-title text-center text-white py-3\\\">{{ title }}</h2>\\n          <ul class=\\\"text-center list-inline py-3\\\">\\n            <li class=\\\"list-inline-item\\\"><a routerLink=\\\"/allusers\\\" class=\\\"btn btn-info\\\">List User</a></li>\\n            <li class=\\\"list-inline-item\\\"><a routerLink=\\\"/user\\\" class=\\\"btn btn-info\\\">Add User</a></li>\\n            <li class=\\\"list-inline-item\\\"><a routerLink=\\\"/deleteuser\\\" class=\\\"btn btn-info\\\">Delete User</a></li>\\n          </ul>\\n        </div>\\n      </div>\\n      <router-outlet></router-outlet>\\n    </div>\\n  </div>\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title: string;\n\n  constructor() {\n    this.title = 'Spring Boot - Angular Application';\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { UserListComponent } from './user-list/user-list.component';\nimport { UserFormComponent } from './user-form/user-form.component';\nimport { UserServiceService } from './user-service.service';\nimport { UserDeleteComponent } from './user-delete/user-delete.component';\n \n@NgModule({\n  declarations: [\n    AppComponent,\n    UserListComponent,\n    UserDeleteComponent,\n    UserFormComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [UserServiceService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXItZGVsZXRlL3VzZXItZGVsZXRlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<p>\\n  user-delete works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { User } from '../user';\nimport { UserServiceService } from '../user-service.service';\n\n@Component({\n  selector: 'app-user-delete',\n  templateUrl: './user-delete.component.html',\n  styleUrls: ['./user-delete.component.css']\n})\nexport class UserDeleteComponent implements OnInit {\n\n  constructor(private userService: UserServiceService) { }\n\n  users: User[];\n \n  ngOnInit() {\n    this.userService.findAll().subscribe(data => {\n      this.users = data;\n    });\n  }\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXItZm9ybS91c2VyLWZvcm0uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"card my-5\\\">\\n  <div class=\\\"card-body\\\">\\n    <form (ngSubmit)=\\\"onSubmit()\\\" #userForm=\\\"ngForm\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"id\\\">ID</label>\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"user.id\\\" class=\\\"form-control\\\" id=\\\"id\\\" name=\\\"id\\\" placeholder=\\\"Enter ID\\\" required\\n          #id=\\\"ngModel\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"name\\\">Name</label>\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"user.name\\\" class=\\\"form-control\\\" id=\\\"name\\\" name=\\\"name\\\"\\n          placeholder=\\\"Enter your name\\\" required #name=\\\"ngModel\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"username\\\">Username</label>\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"user.username\\\" class=\\\"form-control\\\" id=\\\"username\\\" name=\\\"username\\\"\\n          placeholder=\\\"Enter your username\\\" required #username=\\\"ngModel\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"email\\\">Email</label>\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"user.email\\\" class=\\\"form-control\\\" id=\\\"email\\\" name=\\\"email\\\"\\n          placeholder=\\\"Enter your email address\\\" required #email=\\\"ngModel\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"streetaddress\\\">Street Address</label>\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"user.street\\\" class=\\\"form-control\\\" id=\\\"streetaddress\\\"\\n          name=\\\"streetaddress\\\" placeholder=\\\"Enter your street address\\\" required #streetaddress=\\\"ngModel\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"streetsuite\\\">Street Suite</label>\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"user.suite\\\" class=\\\"form-control\\\" id=\\\"streetsuite\\\" name=\\\"streetsuite\\\"\\n          placeholder=\\\"Enter your street suite\\\" required #streetsuite=\\\"ngModel\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"streetcity\\\">City</label>\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"user.city\\\" class=\\\"form-control\\\" id=\\\"streetcity\\\" name=\\\"streetcity\\\"\\n          placeholder=\\\"Enter your street city\\\" required #streetcity=\\\"ngModel\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"streetzipcode\\\">Zipcode</label>\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"user.zipcode\\\" class=\\\"form-control\\\" id=\\\"streetzipcode\\\"\\n          name=\\\"streetzipcode\\\" placeholder=\\\"Enter your zipcode\\\" required #streetzipcode=\\\"ngModel\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"geo\\\">Latitude</label>\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"user.lat\\\" class=\\\"form-control\\\" id=\\\"latitude\\\" name=\\\"latitude\\\"\\n          placeholder=\\\"Enter your latitude\\\" required #latitude=\\\"ngModel\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"geo\\\">Latitude</label>\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"user.lng\\\" class=\\\"form-control\\\" id=\\\"longitude\\\" name=\\\"longitude\\\"\\n          placeholder=\\\"Enter your longitude\\\" required #longitude=\\\"ngModel\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"phone\\\">Phone Number</label>\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"user.phone\\\" class=\\\"form-control\\\" id=\\\"phone\\\" name=\\\"phone\\\"\\n          placeholder=\\\"Enter your phone number\\\" required #phone=\\\"ngModel\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"website\\\">Website</label>\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"user.website\\\" class=\\\"form-control\\\" id=\\\"website\\\" name=\\\"website\\\"\\n          placeholder=\\\"Enter your website\\\" required #website=\\\"ngModel\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"companyname\\\">Company Name</label>\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"user.name\\\" class=\\\"form-control\\\" id=\\\"companyname\\\" name=\\\"companyname\\\"\\n          placeholder=\\\"Enter your company name\\\" required #companyname=\\\"ngModel\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"companycatchphrase\\\">Company Catch Phrase</label>\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"user.catchPhrase\\\" class=\\\"form-control\\\" id=\\\"catchphrase\\\"\\n          name=\\\"catchphrase\\\" placeholder=\\\"Enter your catch phrase\\\" required #companycatchphrase=\\\"ngModel\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n          <label for=\\\"companybs\\\">Company BS</label>\\n          <input type=\\\"text\\\" [(ngModel)]=\\\"user.bs\\\" class=\\\"form-control\\\" id=\\\"bs\\\"\\n            name=\\\"bs\\\" placeholder=\\\"Enter your BS\\\" required #companybs=\\\"ngModel\\\">\\n        </div>\\n      <button type=\\\"submit\\\" [disabled]=\\\"!userForm.form.valid\\\" class=\\\"btn btn-info\\\">Submit</button>\\n    </form>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UserServiceService } from '../user-service.service';\nimport { User } from '../user';\n\n@Component({\n  selector: 'app-user-form',\n  templateUrl: './user-form.component.html',\n  styleUrls: ['./user-form.component.css']\n})\nexport class UserFormComponent implements OnInit {\n\n  user: User;\n\n  constructor(private route: ActivatedRoute, private router: Router, private userServiceService: UserServiceService) {\n    this.user = new User();\n  }\n\n  onSubmit() {\n    this.userServiceService.save(this.user).subscribe(result => this.gotoUserList());\n  }\n\n  gotoUserList() {\n    this.router.navigate(['/users']);\n  }\n\n  ngOnInit() {\n    \n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXItbGlzdC91c2VyLWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"card my-5\\\">\\n  <div class=\\\"card-body\\\">\\n    <table class=\\\"table table-bordered table-striped\\\">\\n      <thead class=\\\"thead-dark\\\">\\n        <tr>\\n          <th scope=\\\"col\\\">ID</th>\\n          <th scope=\\\"col\\\">Name</th>\\n          <th scope=\\\"col\\\">Username</th>\\n          <th scope=\\\"col\\\">Email</th>\\n          <th scope=\\\"col\\\">Street Address, Suite, City, Zipcode</th>\\n          <!-- <th scope=\\\"col\\\">Address Suite</th>\\n          <th scope=\\\"col\\\">City</th>\\n          <th scope=\\\"col\\\">Zipcode</th> -->\\n          <th scope=\\\"col\\\">Phone</th>\\n          <th scope=\\\"col\\\">Website</th>\\n          <th scope=\\\"col\\\">Lat, Long</th>\\n          <th scope=\\\"col\\\">Company, Catch Phrase, Description</th>\\n          <!-- <th scope=\\\"col\\\">Company Catch Phrase</th>\\n          <th scope=\\\"col\\\">Company BS</th> -->\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let user of users\\\">\\n            <!-- <tr *ngFor=\\\"let add of users\\\"></tr> -->\\n          <td>{{ user.id }}</td>\\n          <td>{{ user.name }}</td>\\n          <td>{{ user.username }}</td>\\n          <td>{{ user.email }}</td>\\n          <td>{{ user.address.street }}, {{ user.address.suite }}, {{ user.address.city }}, {{ user.address.zipcode }}</td>\\n          <!-- <td>{{ user.address.suite }}</td>\\n          <td>{{ user.address.city }}</td>\\n          <td>{{ user.address.zipcode }}</td> -->\\n          <td>{{ user.phone }}</td>\\n          <td>{{ user.website }}</td>\\n          <td>{{ user.address.geo.lat }}, {{ user.address.geo.lng }}</td>\\n          <td>{{ user.company.name }}, {{ user.company.catchPhrase }}, {{ user.company.bs }}</td>\\n          <!-- <td>{{ user.company.catchPhrase }}</td>\\n          <td>{{ user.company.bs }}</td> -->\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { User } from '../user';\nimport { UserServiceService } from '../user-service.service';\n\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.css']\n})\nexport class UserListComponent implements OnInit {\n \n  users: User[];\n \n  constructor(private userService: UserServiceService) {\n  }\n \n  ngOnInit() {\n    this.userService.findAll().subscribe(data => {\n      this.users = data;\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { User } from '../app/user';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserServiceService {\n\n  private usersUrl: string;\n  private headers = new Headers({'Content-Type': 'application/json'});\n \n  constructor(private http: HttpClient) {\n    this.usersUrl = 'http://localhost:8080/users';\n  }\n \n  public findAll(): Observable<User[]> {\n    return this.http.get<User[]>(this.usersUrl);\n  }\n \n  public save(user: User) {\n    return this.http.post<User>(this.usersUrl, user);\n  }\n\n  // public delete(id){\n  // if(confirm(\"Are you sure?\")) {\n  //   const url = `$(\"http://localhost:8080/users\")/${id}`;\n  //   return this.http.delete(url).toPromise()\n  //   .then(() => {\n  //     this.findAll();\n  //   })\n  //   }\n  // }\n}\n","export class User {\n    id: string;\n    name: string;\n    username: string;\n    email: string;\n    address: {\n        street: string;\n        suite: string;\n        city: string;\n        zipcode: string;\n        geo: {\n            lat: string;\n            lng: string;\n        };\n    };\n    phone: string;\n    website: string;\n    company: {\n        name: string;\n        catchPhrase: string;\n        bs: string;\n    };\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}